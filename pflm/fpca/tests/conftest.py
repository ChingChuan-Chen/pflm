import numpy as np
import pytest


def _make_func_data(dtype):
    # generate with R package fdapace::Wiener and fdapace::Sparsify (set.seed(1))
    # n = 20, pts = seq(0, 1, by=0.05), sparsity = 15
    # fmt: off
    y = [
        np.array([0.00, 0.05, 0.10, 0.15, 0.20, 0.25, 0.30, 0.35, 0.50, 0.65, 0.70, 0.80, 0.85, 0.90, 1.00], dtype=dtype),
        np.array([0.05, 0.10, 0.15, 0.20, 0.25, 0.40, 0.45, 0.50, 0.55, 0.65, 0.70, 0.85, 0.90, 0.95, 1.00], dtype=dtype),
        np.array([0.05, 0.10, 0.15, 0.25, 0.30, 0.35, 0.45, 0.55, 0.65, 0.70, 0.75, 0.80, 0.85, 0.95, 1.00], dtype=dtype),
        np.array([0.00, 0.05, 0.10, 0.15, 0.20, 0.25, 0.40, 0.45, 0.50, 0.55, 0.60, 0.65, 0.75, 0.80, 1.00], dtype=dtype),
        np.array([0.05, 0.20, 0.25, 0.40, 0.45, 0.50, 0.55, 0.60, 0.65, 0.75, 0.80, 0.85, 0.90, 0.95, 1.00], dtype=dtype),
        np.array([0.05, 0.10, 0.15, 0.20, 0.25, 0.35, 0.40, 0.50, 0.55, 0.60, 0.70, 0.80, 0.90, 0.95, 1.00], dtype=dtype),
        np.array([0.00, 0.05, 0.10, 0.20, 0.30, 0.35, 0.40, 0.45, 0.50, 0.55, 0.60, 0.80, 0.85, 0.90, 1.00], dtype=dtype),
        np.array([0.10, 0.15, 0.25, 0.30, 0.35, 0.45, 0.50, 0.60, 0.65, 0.70, 0.75, 0.80, 0.90, 0.95, 1.00], dtype=dtype),
        np.array([0.00, 0.10, 0.25, 0.35, 0.40, 0.45, 0.50, 0.55, 0.60, 0.65, 0.70, 0.80, 0.90, 0.95, 1.00], dtype=dtype),
        np.array([0.10, 0.15, 0.20, 0.25, 0.35, 0.40, 0.50, 0.55, 0.60, 0.65, 0.75, 0.85, 0.90, 0.95, 1.00], dtype=dtype),
        np.array([0.00, 0.05, 0.15, 0.20, 0.25, 0.30, 0.40, 0.45, 0.55, 0.70, 0.75, 0.80, 0.85, 0.90, 0.95], dtype=dtype),
        np.array([0.05, 0.10, 0.15, 0.20, 0.30, 0.40, 0.45, 0.55, 0.60, 0.65, 0.70, 0.85, 0.90, 0.95, 1.00], dtype=dtype),
        np.array([0.05, 0.20, 0.25, 0.30, 0.35, 0.40, 0.45, 0.55, 0.60, 0.70, 0.75, 0.80, 0.85, 0.90, 1.00], dtype=dtype),
        np.array([0.05, 0.25, 0.30, 0.35, 0.40, 0.50, 0.55, 0.65, 0.70, 0.75, 0.80, 0.85, 0.90, 0.95, 1.00], dtype=dtype),
        np.array([0.00, 0.05, 0.10, 0.20, 0.30, 0.40, 0.45, 0.50, 0.55, 0.60, 0.65, 0.85, 0.90, 0.95, 1.00], dtype=dtype),
        np.array([0.00, 0.05, 0.10, 0.15, 0.20, 0.25, 0.35, 0.45, 0.50, 0.55, 0.60, 0.70, 0.85, 0.90, 1.00], dtype=dtype),
        np.array([0.05, 0.10, 0.15, 0.25, 0.30, 0.35, 0.40, 0.55, 0.65, 0.70, 0.75, 0.80, 0.85, 0.90, 1.00], dtype=dtype),
        np.array([0.05, 0.10, 0.15, 0.20, 0.25, 0.30, 0.35, 0.40, 0.50, 0.55, 0.65, 0.70, 0.90, 0.95, 1.00], dtype=dtype),
        np.array([0.00, 0.05, 0.10, 0.20, 0.30, 0.35, 0.50, 0.65, 0.70, 0.75, 0.80, 0.85, 0.90, 0.95, 1.00], dtype=dtype),
        np.array([0.05, 0.10, 0.15, 0.20, 0.25, 0.35, 0.45, 0.60, 0.65, 0.70, 0.75, 0.80, 0.85, 0.90, 0.95], dtype=dtype),
    ]
    t = [
        np.array([
            0.0, 0.147849992761, 0.040997969705, -0.053040495748, -0.238690810168, -0.121992861289, -0.340350564377, -0.488255803116,
            -0.582566244934, -0.204839407221, -0.197748867326, -0.564682806985, -0.600657281248, -0.907463062619, -0.653464578052
        ], dtype=dtype),
        np.array([
            0.221688051927, 0.093995983828, 0.029624698488, 0.021596078688, -0.0230663728, 0.168333624672, 0.530080172324, 0.383945133628,
            0.264522358769, 0.01133373048, -0.045425228054, 0.506120343436, 0.419227495851, 0.85842132264, 0.834538925022
        ], dtype=dtype),
        np.array([
            0.143855694073, 0.053463550462, -0.350967493602, -0.503067495572, -0.394207013057, -0.210569916683, -0.243000822912, -0.38907649429,
            -0.342206211531, -0.245525370182, -0.420974368935, -0.514638047843, -0.478013025172, -0.891074274763, -0.978839479408
        ], dtype=dtype),
        np.array([
            0.0, -0.176641588685, -0.323884317437, -0.274034579405, -0.005385139996, 0.103030893642, 0.557484545264, 0.482189531993,
            0.212130508121, 0.03196426372, 0.084659838966, 0.627340622785, 0.237677424484, 0.311242195254, 0.400439179177
        ], dtype=dtype),
        np.array([
            0.402063699184, 0.507209426372, 0.805714424034, 1.004553435989, 0.787349577467, 0.320912988918, 0.222087747601, -0.343050023968,
            -0.145791120277, 0.212725017494, 0.362247384387, 0.373422492698, 0.158935373225, -0.029005700836, -0.226258039648
        ], dtype=dtype),
        np.array([
            0.097910049046, 0.100378712487, 0.088828188805, 0.298253146051, -0.020420786272, 0.014187172365, -0.027483230911, 0.383628424336,
            0.382258464307, 0.3314664594, -0.258189457567, 0.217296250424, 0.067970245006, -0.002824112217, -0.209636755570
        ], dtype=dtype),
        np.array([
            0.0, 0.326584957063, 0.46635170637, 0.318711714918, 0.193076108107, -0.043725423314, 0.384562061032, 0.257158766746,
            0.292604771182, 0.226209765626, 0.246126025783, 0.8736170888, 1.263766492922, 1.473698258595, 1.457156341575
        ], dtype=dtype),
        np.array([
            0.403555563856, 0.948603181867, 0.637819445818, 0.681064202838, 0.778198984455, 0.931416805164, 1.215197660185, 1.205380144699,
            1.025629906804, 1.142374742888, 0.928896925543, 0.871703481171, 1.517383160062, 1.289755603136, 0.890878785194
        ], dtype=dtype),
        np.array([
            0.0, 0.127512759152, 0.94125747704, 1.141202630868, 1.199324979137, 0.900077709955, 1.291206802254, 1.279211469405,
            0.972513448378, 0.953940277412, 0.714550762296, 0.550874254952, 0.285955345028, 0.324372718724, 0.391718037683
        ], dtype=dtype),
        np.array([
            -0.536010984465, -0.291603208588, -0.008203597981, 0.159588078182, 0.618751764781, 0.574352174953, 0.581843262574, 0.584960852046,
            0.455319627785, 0.639055090489, 0.952745511323, 0.764184988644, 0.914177063507, 0.997864640574, 1.024620141607
        ], dtype=dtype),
        np.array([
            0.0, -0.22316193701, 0.108158758972, -0.331874889605, -0.440026891781, -0.274877510476, -0.294994356723, 0.151444078255,
            0.470646538205, 0.060999972572, 0.189423140701, 0.080217702792, 0.166638296525, 0.03241693317, 0.050255752237
        ], dtype=dtype),
        np.array([
            -0.29079053872, -0.191515285257, -0.12503192902, 0.046950776614, -0.031563403154, 0.065251186578, 0.178917815958, 0.934892085064,
            0.654355554978, 0.520869864595, 0.241164717375, 0.540154647907, 0.524486682823, 0.502589593562, 0.203051123397
        ], dtype=dtype),
        np.array([
            0.068443024954, 0.515954871567, 0.554673680158, 0.638496721318, 0.187968099562, -0.155291959559, 0.125445721043, 0.188739278428,
            -0.182668625216, -0.331639488291, -0.380517147462, -0.680882023066, -0.623837296985, -0.694276119473, -0.447817528954
        ], dtype=dtype),
        np.array([
            -0.190881147876, 0.320231409007, 0.065876043957, 0.031102408798, -0.147721550716, -0.4245423213, -0.238599151423, -0.0852627909,
            -0.309855268891, -0.207257146826, -0.217831851329, 0.315737916917, 0.553767998307, 1.045960606512, 0.822264138758
        ], dtype=dtype),
        np.array([
            0.0, 0.037359966393, -0.080911295563, 0.251465969694, 0.444547732845, -0.030822420467, 0.019034514219, -0.130079811638,
            -0.289704287291, -0.344760639589, -0.534245077595, -1.083694775208, -1.154875778093, -1.258163332561, -1.254650520136
        ], dtype=dtype),
        np.array([
            0.0, -0.245881478863, -0.574539233294, -0.691437450997, -0.985327368261, -0.801996017576, -0.805602026064, -1.226143674174,
            -1.479683142927, -1.04864841122, -0.759471182448, -0.573521929405, -1.43426751506, -1.2465904027, -1.274797879346
        ], dtype=dtype),
        np.array([
            -0.239800457482, -0.330394648933, -0.519287146229, -0.732442563221, -0.670370800101, -0.97681464288, -0.765014079645, -1.03912910776,
            -1.084851284604, -1.014906983118, -0.676352746472, -0.507956506305, -0.32167057928, -0.332188113071, -0.267590560826
        ], dtype=dtype),
        np.array([
            -0.35426263555, -0.509116910963, -0.315702926562, 0.021946641574, 0.217729345156, 0.42267425792, 0.344659631041, 0.806795387846,
            0.598178852675, 0.670573274097, 0.339214528723, 0.187873209241, 0.304269490657, 0.251893907187, 0.301636312306
        ], dtype=dtype),
        np.array([
            0.0, -0.124962978502, -0.226455433086, -0.51003942807, -0.280508271382, -0.447091187151, -1.025642894486, -1.252360486242,
            -1.472817250728, -1.347571674595, -1.662994392126, -1.448339531197, -1.460817312279, -1.10539683409, -1.005074262880
        ], dtype=dtype),
        np.array([
            -0.058501096493, 0.293431367685, 0.605039713897, 0.32550954348, 0.219237713666, 0.598037612135, 0.499997425489, 0.864935505664,
            0.969529071211, 0.686458786072, 1.140030357293, 1.20693207998, 0.89119554385, 1.231533960567, 1.167043329046
        ], dtype=dtype),
    ]
    # fmt: on
    w = np.ones((len(y),), dtype=dtype)
    return y, t, w


@pytest.fixture
def basic_func_data(request):
    dtype = getattr(request, "param", np.float64)
    return _make_func_data(dtype)
